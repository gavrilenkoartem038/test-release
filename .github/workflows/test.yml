name: Create and Release Tag

on:
  workflow_dispatch:
    inputs:
      is_hotfix:
        description: 'Hotfix'
        type: choice
        required: true
        default: 'false'
        options:
          - 'true'
          - 'false'

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      commit_sha: ${{ steps.git_commit.outputs.sha }} 
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: 'Get Previous tag'
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 0.1.0
    
    - name: 'Get next version'
      id: semvers
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.previoustag.outputs.tag }}
  

    - uses: actions/github-script@v7
      id: get_branch_version
      env:
        branch_name: ${{ github.ref_name }}
      with:
        result-encoding: string
        script: |
          const { branch_name } = process.env
          const versionArr = branch_name.split('/')
          const version = `${versionArr[1]}`
          console.log(version)
          return version

    - name: Select next tag
      id: select_next_tag
      run: |
        if [ "${{ inputs.is_hotfix }}" == "false" ]; then
          echo "release"
          echo "next_tag=${{ steps.get_branch_version.outputs.result }}" >> "$GITHUB_OUTPUT"
        else
          echo "hotfix"
          echo "next_tag=${{ steps.semvers.outputs.patch }}" >> "$GITHUB_OUTPUT"
        fi
    
    - name: 'Update package.json'
      id: create_commit
      uses: BellCubeDev/update-package-version-by-release-tag@v2
      with:
        version: ${{ steps.select_next_tag.outputs.next_tag }}
        ignore-semver-check: "true"
        package-json-path: "./package.json"
    - run: git add .
    - id: git_commit
      uses: zwaldowski/git-commit-action@v1
      with:
        commit_message: 'feat: update package.json version to ${{ steps.select_next_tag.outputs.next_tag }}'
    - run: echo "${{ steps.git_commit.outputs.sha }}"
    - run: git push

    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
    - name: Check outputs
      run: echo ${{ steps.vars.outputs.sha_short }}

    - name: checkout main
      run: |
        git checkout main
    
    - name: Generate Release Tag
      uses: action-pack/github-release@v2
      with:
        tag: ${{ steps.select_next_tag.outputs.next_tag }}
        title: ${{ steps.select_next_tag.outputs.next_tag }}
        commit: 'main'

  install-dependencies:
    runs-on: ubuntu-22.04
    needs: create_release
    steps:
      - uses: actions/checkout@v4
      - name: Display Branch Name
        run: |
          echo "Current Branch: ${{ github.ref }}"
      - uses: ./.github/actions/common-steps
      - run: pnpm install --no-frozen-lockfile
  
  build-app:
    needs: [install-dependencies, create_release]
    uses: ./.github/workflows/template-build.yml
    with:
      run: pnpm
      build-script: build
      artifact-name: build-app
      artifact-path: build

  merge-branch:
    runs-on: ubuntu-latest
    needs: [build-app, create_release]
    steps:
      - uses: actions/checkout@v4
      - name: cherry-pick commit
        run: |
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git status
          git remote update
          git fetch
          git checkout main
          # git fetch ${{ needs.checkout-branch.outputs.release_branch }}
          git cherry-pick ${{ needs.create_release.outputs.commit_sha }}
          git push origin main
