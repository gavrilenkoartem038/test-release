name: Pull request

on:
  pull_request:

jobs:
  your-job:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: 'Get Previous tag'
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 0.1.0

    - name: 'Get next minor version'
      id: semvers
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.previoustag.outputs.tag }}

  get-changed-files: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
  
    - name: get-changed-files
      run: |
        CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | tr '\n' ',')
        echo "Changed files: $CHANGED_FILES"
        echo "changed_files=$CHANGED_FILES" >> $GITHUB_ENV
    
    - name: get-changed-packages
      uses: actions/github-script@v7
      with:
        script: |
          const changedFiles = process.env.changed_files.split(',').filter(name => name !== "");
          console.log(changedFiles);

          const result = [];

          changedFiles.forEach((path) => {
            if (path.startsWith(".github/workflows")) {
              return ["app", "lib", "logger", "player"];
            } else if (path.startsWith("packages/")) {
              const key = path.split("/")[1];

              if (key === "logger") {
                result.push("logger");
              } else if (key === "app") {
                result.push("app");
              } else if (key === "lib") {
                result.push("lib");
              } else if (key === "tma") {
                result.push("lib");
              } else if (key === "player") {
                result.push("player", "lib");
              }
            }
          });

          console.log([...new Set(result)].join(','))

          return [...new Set(result)].join(',');

  get-commit-message:
    runs-on: ubuntu-latest
    needs: your-job
    outputs:
      commit-message: ${{ steps.get-commit-message.outputs.commit-message }}
    steps:
    - uses: actions/checkout@v4
    - name: Output latest commit message
      id: get-commit-message
      run: |
        git fetch origin ${{ github.event.pull_request.head.sha }}
        git checkout ${{ github.event.pull_request.head.sha }}
        COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        echo "Commit Message: $COMMIT_MESSAGE"
        echo "commit-message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
  

  test-e2e:
    runs-on: ubuntu-latest
    needs: get-commit-message 
    steps:
    - name: test if
      if: contains(needs.get-commit-message.outputs.commit-message, '[e2e]')
      run: |
        echo "contain [e2e]"