name: CI Pipeline

on:
  push:
    tags:
      - '*'
  workflow_run:
    workflows: ['Create release']
    types: [completed]

jobs:
  checkout-branch:
    runs-on: ubuntu-latest
    outputs:
      release_branch: ${{ steps.get_version.outputs.result }}
      commit_sha: ${{ steps.git_commit.outputs.sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 'Get Previous tag'
        id: previoustag
        uses: JinoArch/get-latest-tag@latest

      - name: Output tag
        env:
          RELEASE_VERSION: ${{ steps.previoustag.outputs.latestTag }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.previoustag.outputs.latestTag }}
    
      - uses: actions/github-script@v7
        id: get_version
        env:
          current_version: ${{ steps.previoustag.outputs.latestTag }}
        with:
          result-encoding: string
          script: |
            const { current_version } = process.env
            const versionArr = current_version.split('.')
            versionArr[versionArr.length - 1] = 0
            const branchName = `release/${versionArr.join('.')}`
            return branchName

      - name: checkout branch
        run: |
          branch_name=${{ steps.get_version.outputs.result }}
          git checkout $branch_name

      - name: 'Update package.json'
        uses: BellCubeDev/update-package-version-by-release-tag@v2
        with:
          version: ${{ steps.previoustag.outputs.latestTag }}
          ignore-semver-check: "true"
          package-json-path: "./package.json"
      - run: git add .

      - id: git_commit
        uses: zwaldowski/git-commit-action@v1
        with:
          commit_message: 'feat: update package.json version to ${{ steps.previoustag.outputs.latestTag }}'
      - run: echo "${{ steps.git_commit.outputs.sha }}"
      - run: git push

  install-dependencies:
    runs-on: ubuntu-22.04
    needs: checkout-branch
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.checkout-branch.outputs.release_branch }}
      - uses: ./.github/actions/common-steps
      - run: pnpm install --no-frozen-lockfile
  
  build-app:
    needs: [install-dependencies, checkout-branch]
    uses: ./.github/workflows/template-build.yml
    with:
      run: pnpm
      build-script: build
      artifact-name: build-app
      artifact-path: build
      branch-name: ${{ needs.checkout-branch.outputs.release_branch }}

  merge-branch:
    runs-on: ubuntu-latest
    needs: [build-app, checkout-branch]
    steps:
      - uses: actions/checkout@v4
      - name: checkout branch
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "actions-user"
          git pull
          git cherry-pick ${{ needs.checkout-branch.outputs.commit_sha }}
          git push
